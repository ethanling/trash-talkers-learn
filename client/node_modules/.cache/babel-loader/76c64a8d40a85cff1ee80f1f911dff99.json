{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/trash-talkers-learn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/trash-talkers-learn/src/components/Header.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiSettings } from 'react-icons/fi';\nimport Settings from '../pages/Settings';\nconst StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    font-weight: bold;\n    padding: 1.5em 1em 8em 1em;\n    background: #0a0a0a;\n    background: linear-gradient(\n        180deg,\n        rgba(73, 73, 73, 1) 0%,\n        rgba(10, 10, 10, 1) 72%\n    );\n    margin-bottom: -8.5em;\n`;\nconst StyledSettingsIcon = styled.button`\n    color: #fafafa;\n    background: none;\n    border: none;\n\tfont-size: 1.5em;\n`;\nconst StyledTitle = styled.h1`\n\tfont-size: 2em;\n\tflex: 1;\n\tpadding: 0;\n\tmargin: 0;\n    background: none;\n`;\n\nconst Header = ({\n  title\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        toggle = _useState2[0],\n        setToggle = _useState2[1];\n\n  const toggleSettings = () => setToggle(!toggle);\n\n  return React.createElement(StyledHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(StyledTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, title), React.createElement(StyledSettingsIcon, {\n    onClick: toggleSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FiSettings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), toggle ? React.createElement(Settings, {\n    toggle: toggleSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : '');\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/ethanling/Dev/trash-talkers-learn/src/components/Header.js"],"names":["React","useState","styled","FiSettings","Settings","StyledHeader","div","StyledSettingsIcon","button","StyledTitle","h1","Header","title","toggle","setToggle","toggleSettings"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;;;;;CAAhC;AAgBA,MAAMC,kBAAkB,GAAGL,MAAM,CAACM,MAAO;;;;;CAAzC;AAOA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,EAAG;;;;;;CAA9B;;AASA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACEX,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,QACnBY,MADmB;AAAA,QACXC,SADW;;AAE1B,QAAMC,cAAc,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAtC;;AAEA,SACF,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,KAAf,CADD,EAEC,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAEG,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD,EAKYF,MAAM,GAAG,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEE,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2C,EAL7D,CADE;AASH,CAbD;;AAeA,eAAeJ,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiSettings } from 'react-icons/fi'\nimport Settings from '../pages/Settings';\n\nconst StyledHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    font-weight: bold;\n    padding: 1.5em 1em 8em 1em;\n    background: #0a0a0a;\n    background: linear-gradient(\n        180deg,\n        rgba(73, 73, 73, 1) 0%,\n        rgba(10, 10, 10, 1) 72%\n    );\n    margin-bottom: -8.5em;\n`;\n\nconst StyledSettingsIcon = styled.button`\n    color: #fafafa;\n    background: none;\n    border: none;\n\tfont-size: 1.5em;\n`;\n\nconst StyledTitle = styled.h1`\n\tfont-size: 2em;\n\tflex: 1;\n\tpadding: 0;\n\tmargin: 0;\n    background: none;\n`;\n\n\nconst Header = ({ title }) => {\n    const [toggle, setToggle] = useState(false);\n    const toggleSettings = () => setToggle(!toggle)\n    \n    return (\n\t\t<StyledHeader>\n\t\t\t<StyledTitle>{ title }</StyledTitle>\n\t\t\t<StyledSettingsIcon onClick={toggleSettings}>\t\t\n\t\t\t\t<FiSettings />\t\n\t\t\t</StyledSettingsIcon>\n            { toggle ? <Settings toggle={toggleSettings} /> : ('')}\n\t\t</StyledHeader>\n\t)\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}