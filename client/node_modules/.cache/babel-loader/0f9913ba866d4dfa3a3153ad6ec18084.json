{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/trash-talkers-learn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/trash-talkers-learn/src/components/ListView.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst StyledList = styled.ul`\n    list-style-type: none;\n    padding: 1em;\n    margin: 1em 0 0 0;\n`;\nconst StyledListTitle = styled.li`\n    font-size: 0.9em;\n    text-transform: uppercase;\n    font-weight: bold;\n    display: block;\n    background: rgba(0, 0, 0, 1);\n    padding: 10px 12px 10px 12px;\n`;\nconst StyledListItem = styled.li`\n    border-bottom: 1px solid #464646;\n    padding: 10px 12px 10px 12px;\n    background: #222;\n    cursor: pointer;\n\n    :last-child {\n        border-bottom: none;\n    }\n`;\n\nconst ListView = ({\n  config\n}) => {\n  const _useState = useState({\n    indexes: [0, 1]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        expanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const handleExpand = i => {\n    let tmp = expanded.indexes;\n    tmp.filter(item => item != i);\n    setExpanded(prevState => ({\n      indexes: [...prevState.indexes, i]\n    }));\n  };\n\n  return React.createElement(StyledList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(StyledListTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Videos\"), config.map((item, i) => React.createElement(StyledListItem, {\n    key: i,\n    onClick: () => handleExpand(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, expanded.indexes[i] === i ? 'expanded' : 'not expanded')));\n};\n\nexport default ListView;","map":{"version":3,"sources":["/Users/ethanling/Dev/trash-talkers-learn/src/components/ListView.js"],"names":["React","useState","styled","StyledList","ul","StyledListTitle","li","StyledListItem","ListView","config","indexes","expanded","setExpanded","handleExpand","i","tmp","filter","item","prevState","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,EAAG;;;;CAA7B;AAMA,MAAMC,eAAe,GAAGH,MAAM,CAACI,EAAG;;;;;;;CAAlC;AASA,MAAMC,cAAc,GAAGL,MAAM,CAACI,EAAG;;;;;;;;;CAAjC;;AAWA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACGR,QAAQ,CAAC;AAACS,IAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAV,GAAD,CADX;AAAA;AAAA,QACtBC,QADsB;AAAA,QACZC,WADY;;AAG7B,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIC,GAAG,GAAGJ,QAAQ,CAACD,OAAnB;AAEAK,IAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAI,IAAIA,IAAI,IAAIH,CAA3B;AACAF,IAAAA,WAAW,CAACM,SAAS,KAAK;AACtBR,MAAAA,OAAO,EAAE,CAAC,GAAGQ,SAAS,CAACR,OAAd,EAAuBI,CAAvB;AADa,KAAL,CAAV,CAAX;AAGH,GAPD;;AASA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKL,MAAM,CAACU,GAAP,CAAW,CAACF,IAAD,EAAOH,CAAP,KACR,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,CAArB;AAAwB,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,CAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEOH,QAAQ,CAACD,OAAT,CAAiBI,CAAjB,MAAwBA,CAAzB,GAA+B,UAA/B,GAA8C,cAFpD,CADH,CAFL,CADJ;AAWH,CAvBD;;AAyBA,eAAeN,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components';\n\nconst StyledList = styled.ul`\n    list-style-type: none;\n    padding: 1em;\n    margin: 1em 0 0 0;\n`;\n\nconst StyledListTitle = styled.li`\n    font-size: 0.9em;\n    text-transform: uppercase;\n    font-weight: bold;\n    display: block;\n    background: rgba(0, 0, 0, 1);\n    padding: 10px 12px 10px 12px;\n`;\n\nconst StyledListItem = styled.li`\n    border-bottom: 1px solid #464646;\n    padding: 10px 12px 10px 12px;\n    background: #222;\n    cursor: pointer;\n\n    :last-child {\n        border-bottom: none;\n    }\n`;\n\nconst ListView = ({ config }) => {\n    const [expanded, setExpanded] = useState({indexes: [0, 1]});\n    \n    const handleExpand = i => {\n        let tmp = expanded.indexes;\n        \n        tmp.filter(item => item != i)\n        setExpanded(prevState => ({\n            indexes: [...prevState.indexes, i]\n        }));\n    }\n\n    return (\n        <StyledList>\n            <StyledListTitle>Videos</StyledListTitle>\n            {config.map((item, i) => (\n                <StyledListItem key={i} onClick={() => handleExpand(i)}>\n                    {/* {item.title} */}\n                    { (expanded.indexes[i] === i) ? ('expanded') : ('not expanded')}\n                </StyledListItem>\n            ))}\n        </StyledList>\n    );\n}\n\nexport default ListView;"]},"metadata":{},"sourceType":"module"}