{"ast":null,"code":"import _slicedToArray from \"/Users/ethanling/Dev/trash-talkers-learn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ethanling/Dev/trash-talkers-learn/src/authentication/Auth.js\";\nimport React, { useEffect, useState } from \"react\";\nimport appAuth from \"./config.js\";\nexport const AuthContext = React.createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentUser = _useState2[0],\n        setCurrentUser = _useState2[1];\n\n  useEffect(() => {\n    appAuth.auth().onAuthStateChanged(setCurrentUser);\n    currentUser ? console.log(true) : console.log(false);\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/ethanling/Dev/trash-talkers-learn/src/authentication/Auth.js"],"names":["React","useEffect","useState","appAuth","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","auth","onAuthStateChanged","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACJL,QAAQ,CAAC,IAAD,CADJ;AAAA;AAAA,QACnCM,WADmC;AAAA,QACtBC,cADsB;;AAG1CR,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,OAAO,CAACO,IAAR,GAAeC,kBAAf,CAAkCF,cAAlC;AAEAD,IAAAA,WAAW,GAAII,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAJ,GAA0BD,OAAO,CAACC,GAAR,CAAY,KAAZ,CAArC;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA;AADG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,QALL,CADJ;AASH,CAlBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport appAuth from \"./config.js\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        appAuth.auth().onAuthStateChanged(setCurrentUser);\n\n        currentUser ? (console.log(true)) : (console.log(false));\n    }, []);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}